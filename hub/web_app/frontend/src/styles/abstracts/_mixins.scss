@use 'variables' as var;

// Common animations
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(100%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

// Animation mixins with parameters
@mixin fade-in($duration: 0.8s, $timing: ease-in, $delay: 0s, $opacity-start: 0, $opacity-end: 1) {
    opacity: $opacity-start;
    animation: fadeIn $duration $timing $delay forwards;
    
    @keyframes fadeIn {
        from {
            opacity: $opacity-start;
        }
        to {
            opacity: $opacity-end;
        }
    }
}

@mixin slide-in-right($duration: 0.8s, $timing: ease-out, $delay: 0s, $translate-x: 100%, $opacity-start: 0, $opacity-end: 1) {
    opacity: $opacity-start;
    animation: slideInRight $duration $timing $delay forwards;
    
    @keyframes slideInRight {
        from {
            opacity: $opacity-start;
            transform: translateX($translate-x);
        }
        to {
            opacity: $opacity-end;
            transform: translateX(0);
        }
    }
}

@mixin slide-in-up($duration: 0.8s, $timing: ease-out, $delay: 0s, $translate-y: 20px, $opacity-start: 0, $opacity-end: 1) {
    opacity: $opacity-start;
    animation: slideInUp $duration $timing $delay forwards;
    
    @keyframes slideInUp {
        from {
            opacity: $opacity-start;
            transform: translateY($translate-y);
        }
        to {
            opacity: $opacity-end;
            transform: translateY(0);
        }
    }
}

@mixin slide-in-left($duration: 0.8s, $timing: ease-out, $delay: 0s, $translate-x: -100%, $opacity-start: 0, $opacity-end: 1) {
    opacity: $opacity-start;
    animation: slideInLeft $duration $timing $delay forwards;
    
    @keyframes slideInLeft {
        from {
            opacity: $opacity-start;
            transform: translateX($translate-x);
        }
        to {
            opacity: $opacity-end;
            transform: translateX(0);
        }
    }
}

@mixin slide-in-down($duration: 0.8s, $timing: ease-out, $delay: 0s, $translate-y: -20px, $opacity-start: 0, $opacity-end: 1) {
    opacity: $opacity-start;
    animation: slideInDown $duration $timing $delay forwards;
    
    @keyframes slideInDown {
        from {
            opacity: $opacity-start;
            transform: translateY($translate-y);
        }
        to {
            opacity: $opacity-end;
            transform: translateY(0);
        }
    }
}

@mixin scale-in($duration: 0.8s, $timing: ease-out, $delay: 0s, $scale-start: 0.8, $scale-end: 1, $opacity-start: 0, $opacity-end: 1) {
    opacity: $opacity-start;
    animation: scaleIn $duration $timing $delay forwards;
    
    @keyframes scaleIn {
        from {
            opacity: $opacity-start;
            transform: scale($scale-start);
        }
        to {
            opacity: $opacity-end;
            transform: scale($scale-end);
        }
    }
}

// Mixins
@mixin flex-container($direction: row, $align: center, $justify: center) {
    display: flex;
    flex-direction: $direction;
    align-items: $align;
    justify-content: $justify;
}

@mixin text-style($font: var(--font-outfit),
    $size: 18px,
    $weight: 500,
    $shadow: var.$lighter-text-shadow-effect,
    $style: normal,
    $line_height: 10px,
    $text_align: center,
    $color: var.$text-color) {
    font-family: $font;
    font-size: $size;
    font-weight: $weight;
    text-shadow: $shadow;
    font-style: $style;
    line-height: $line_height;
    text-align: $text_align;
    color: $color;
}

@mixin button-style($bg: #ffffff, $width: 0px, $height: 0px, $color: #000000, $border: none, $box-shadow: var.$box-shadow, $border-radius: 6px) {
    @include flex-container(row, center, center);
    width: $width;
    height: $height;
    background: $bg;
    color: $color;
    border: $border;
    box-shadow: $box-shadow;
    border-radius: $border-radius;
    cursor: pointer;
    transition: background 0.3s ease, box-shadow 0.3s ease;
}