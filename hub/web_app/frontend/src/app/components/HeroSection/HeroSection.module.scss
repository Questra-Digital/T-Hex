$heading-text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
$text-color: #000000;

// Mixin for reusable text styles
@mixin text-style($font: var(--font-outfit),
    $size: 18px,
    $weight: 500,
    $shadow: none,
    $style: normal,
    $line-height: 1.2,
    $text-align: center,
    $color: inherit) {
    font-family: $font;
    font-size: $size;
    font-weight: $weight;
    text-shadow: $shadow;
    font-style: $style;
    line-height: $line-height;
    text-align: $text-align;
    color: $color;
}


.heroSection {
    background-color: #EEEEEE;
    display: flex;
    flex-direction: row;
    height: 841px;
    position: relative; //A positioning context
    display: flex;
    flex-direction: row;

    .leftSection {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: start;
        width: 50%;
        margin-left: 5%;
        height: 100%;
        margin-top: 1%;

        h1 {
            @include text-style(var(--font-outfit),
                64px,
                500,
                $heading-text-shadow,
                normal,
                81px,
                left,
                $text-color );

            span {
                color: #1B39CE;
            }
        }

        .breakLine {
            width: 173px;
            height: 2px;
            background-color: black; // Ensures the line is visible
            display: block; // Ensures the span behaves like a block element

        }

        .bodyText {
            @include text-style(var(--font-outfit), 24px, 500, $heading-text-shadow , normal, 30px, left, $text-color )
        }

        .buttonsGroup {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            width: 70%;

            button {
                width: 307px;
                height: 65px;
                background: #3D8D7A;
                border: 0.5px solid #3D8D7A;
                box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
                border-radius: 6px;
                @include text-style(var(--font-outfit), 24px, 400, none, normal, 30px, center, $text-color );
                letter-spacing: -0.02em;
                color: white;
                cursor: pointer;
                border: none;

                &:hover {
                    background: #2e6e5d;
                    color: #e0e0e0;
                }

            }

            button.googleButton {
                display: flex;
                align-items: center;
                justify-content: space-evenly;
                background-color: white;
                color: #000000;
                font-size: 20px;
                line-height: 25px;

                &:hover {
                    background: #f0f0f0;
                    box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.3);
                }
            }
        }

        /* ManageLocations.module.scss (or wherever you keep this) */
        .trustedGlobally {
            display: flex;
            flex-direction: column;
            align-items: flex-start;

            p {
                @include text-style(var(--font-outfit),
                    24px,
                    500,
                    none,
                    normal,
                    30px,
                    left,
                    rgba(0, 0, 0, 0.55));
            }

            .usersIcons {
                display: flex;
                justify-content: flex-start;
                align-items: center;
                gap: 5%;
                width: 100%; // span the full container width
                margin-left: -2.5%;
                margin-top: -4%;

                .telstra {
                    margin-top: 5%;
                    margin-left: -10%;
                }

                .rubrik {
                    margin-bottom: 5%;
                    margin-left: -15%;

                }

                .vimeo {
                    margin-left: -10%;
                }

                .nvidia {
                    margin-left: -8%;
                }
            }

        }


    }

    .rightSection {
        display: flex;
        flex-direction: column;
        width: 50%;
        align-items: center;
        justify-content: center;

      .dashboard{
        position: relative;//positioning context
        cursor: pointer;
      }
      .playCircle {
        position: absolute; /* Position relative to .mainImage */
        top: 50%;
        left: 50%;
        cursor: pointer;
      }

    }

    // Create the rectangle at the background
    &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        width: 40%;
        height: 100%;
        background-color: #D9D9D9;
        z-index: 0; // Ensure it stays behind content
    }


    // Ensure content stays above the rectangle
    * {
        position: relative;
        z-index: 1;
    }

}